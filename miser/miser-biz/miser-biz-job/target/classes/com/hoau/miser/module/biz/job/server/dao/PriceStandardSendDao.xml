<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoau.miser.module.biz.job.server.dao.PriceStandardSendDao">

	<resultMap
		type="com.hoau.miser.module.biz.job.shared.domain.PriceStandardEntity"
		id="priceStandardResultMap">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<id column="trans_type_code" property="transTypeCode" jdbcType="VARCHAR" />
		<id column="trans_type_name" property="transTypeName" jdbcType="VARCHAR" />
		<id column="weight_price" property="weightPrice" jdbcType="DOUBLE" />
		<id column="volume_price" property="volumePrice" jdbcType="DOUBLE" />
		<id column="add_fee" property="addFee" jdbcType="DOUBLE" />
		<id column="lowest_fee" property="lowestFee" jdbcType="DOUBLE" />
		<id column="freight_section_code" property="freightSectionCode" jdbcType="VARCHAR" />
		<id column="fuel_fee_section" property="fuelFeeSection" jdbcType="VARCHAR" />
		<id column="fuel_fee_section_name" property="fuelFeeSectionName" jdbcType="VARCHAR" />
		<id column="effective_time" property="effectiveTime" jdbcType="TIMESTAMP" />
		<id column="invalid_time" property="invalidTime" jdbcType="TIMESTAMP" />
		<id column="remark" property="remark" jdbcType="VARCHAR" />
		<id column="active" property="active" jdbcType="VARCHAR" />
		<id column="create_time" property="createDate" jdbcType="TIMESTAMP" />
		<id column="MODIFY_USER_CODE" property="modifyUser" jdbcType="VARCHAR" />
		<id column="modify_time" property="modifyDate" jdbcType="TIMESTAMP" />
		<id column="state" property="state" jdbcType="VARCHAR" />
		<association property="sendPriceCity"   resultMap="send_districtChildResultMap"/>
		<association property="arrivePriceCity"  resultMap="arrive_districtChildResultMap"/>
	</resultMap>

	<resultMap id="send_districtChildResultMap"
		type="com.hoau.miser.module.biz.job.shared.domain.PriceCitySendEntity">
		<result property="id" column="SPCE_ID" jdbcType="VARCHAR" />
		<result property="code" column="SPCE_CODE" jdbcType="VARCHAR" />
		<result property="name" column="SPCE_NAME" jdbcType="VARCHAR" />
		<result property="remark" column="SPCE_REMARK" jdbcType="VARCHAR" />
		<result property="active" column="SPCE_ACTIVE" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="arrive_districtChildResultMap"
		type="com.hoau.miser.module.biz.job.shared.domain.PriceCitySendEntity">
		<result property="id" column="APCE_ID" jdbcType="VARCHAR" />
		<result property="code" column="APCE_CODE" jdbcType="VARCHAR" />
		<result property="name" column="APCE_NAME" jdbcType="VARCHAR" />
		<result property="remark" column="APCE_REMARK" jdbcType="VARCHAR" />
		<result property="active" column="APCE_ACTIVE" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="query_mian_param">
		PSE.ID AS ID,
		PSE.trans_type_code AS trans_type_code,
		PSE.trans_type_name AS trans_type_name,
		PSE.weight_price AS weight_price,
		PSE.volume_price AS volume_price,
		PSE.add_fee AS add_fee,
		PSE.lowest_fee AS lowest_fee,
		PSE.fuel_fee_section AS fuel_fee_section,
		PSE.effective_time AS effective_time,
		PSE.invalid_time AS invalid_time,
		PSE.remark AS remark,
		PSE.active AS active,
		PSE.create_user_code AS create_user_code,
		PSE.create_time AS create_time,
		PSE.modify_time AS modify_time,
		PSE.MODIFY_USER_CODE AS MODIFY_USER_CODE,
		SECTION.name as fuel_fee_section_name,
		<![CDATA[
		case when (PSE.invalid_time<sysdate and PSE.active='Y') then 'PASSED'
 			                     when (PSE.effective_time<=sysdate and PSE.active='Y') then 'EFFECTIVE'
 			                     when (PSE.effective_time>sysdate and PSE.active='Y') then 'WAIT'
 			                     when (PSE.active='N') then 'DELETED'
                           else 
                                ''
        end as state
        ]]>
		
	</sql>
	
	<sql id="query_send_pricecisty_param">
		SPCE.ID AS SPCE_ID,
		LPAD(SPCE.CODE,4,'0') AS SPCE_CODE,
		SPCE.NAME AS SPCE_NAME,
		SPCE.REMARK AS SPCE_REMARK,
		SPCE.ACTIVE AS SPCE_ACTIVE
	</sql>

	<sql id="query_arrive_pricecisty_param">
		APCE.ID AS APCE_ID,
		LPAD(APCE.CODE,4,'0') AS APCE_CODE,
		APCE.NAME AS APCE_NAME,
		APCE.REMARK AS APCE_REMARK,
		APCE.ACTIVE AS APCE_ACTIVE
	</sql>

	<!-- 查询需要发送的标准价格的过滤条件 -->
	<sql id="queryCondition_priceStandard">
		<where>
			<if test="endTime != null">
				<!-- 失效时间落在此次同步的时间范围内 -->
				<![CDATA[
				(
					(
					PSE.INVALID_TIME < #{endTime, jdbcType=TIMESTAMP}

				]]>
				<if test="startTime != null">
					<![CDATA[
							AND PSE.INVALID_TIME >= #{startTime, jdbcType=TIMESTAMP}
						]]>
				</if>
				<!-- 为了过滤待生效数据的失效，如果失效时间在当前范围内，要求当前没有生效中的数据，否则此失效数据不同步 -->
				<![CDATA[
					AND PSE.ID NOT IN (SELECT TEMP.ID FROM
							T_PRICE_STANDARD TEMP
							WHERE PSE.TRANS_TYPE_CODE=TEMP.TRANS_TYPE_CODE
							AND PSE.SEND_PRICE_CITY = TEMP.SEND_PRICE_CITY
							AND PSE.ARRIVE_PRICE_CITY = TEMP.ARRIVE_PRICE_CITY
							AND (TEMP.EFFECTIVE_TIME <= SYSDATE AND
						  (SYSDATE < TEMP.INVALID_TIME OR
						  TEMP.INVALID_TIME IS NULL))
							AND TEMP.ACTIVE = 'Y')
					)
				]]>
				<!-- end of 失效时间落在此次同步的时间范围内 -->

				<!-- 生效时间在本次同步时间范围内,生效时间在范围内要求必须状态有效的数据 -->
				<![CDATA[
					OR
					( PSE.ACTIVE='Y' AND PSE.EFFECTIVE_TIME < #{endTime, jdbcType=TIMESTAMP}
				]]>
				<if test="startTime != null">
					<![CDATA[
						AND PSE.EFFECTIVE_TIME >= #{startTime, jdbcType=TIMESTAMP }
					]]>
				</if>
					)
				)
				<!-- end of生效时间在本次同步时间范围内 -->
			</if>
		</where>
	</sql>


	<!-- 根据参数查询标准价格信息  -->
	<select id="queryListByParam" resultMap="priceStandardResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobQueryFilterEntity">
		SELECT
		<include refid="query_mian_param"></include>
		,
		<include refid="query_send_pricecisty_param"></include>
		,
		<include refid="query_arrive_pricecisty_param"></include>
		FROM T_PRICE_STANDARD PSE
		Left join T_PRICE_CITY SPCE on PSE.SEND_PRICE_CITY=SPCE.CODE
		Left join T_PRICE_CITY APCE on PSE.ARRIVE_PRICE_CITY=APCE.CODE
		Left join T_PRICE_SECTION SECTION on PSE.fuel_fee_section=SECTION.CODE and SECTION.active='Y'
   	    WHERE
   	    (PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY, PSE.MODIFY_TIME,PSE.CREATE_TIME)
		IN (
		  SELECT PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY, MAX(PSE.MODIFY_TIME) AS MAX_MODIFY_TIME,MAX(PSE.CREATE_TIME) AS MAX_CREATE_TIME
		  FROM T_PRICE_STANDARD PSE
		  <include refid="queryCondition_priceStandard"></include>
		GROUP BY PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY
		)
	</select>
	
	<select id="queryListByParamByEvent" resultMap="priceStandardResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.PriceEventSendEntity">
		SELECT
		<include refid="query_mian_param"></include>
		,
		<include refid="query_send_pricecisty_param"></include>
		,
		<include refid="query_arrive_pricecisty_param"></include>
		FROM T_PRICE_STANDARD PSE
		Left join T_PRICE_CITY SPCE on PSE.SEND_PRICE_CITY=SPCE.CODE
		Left join T_PRICE_CITY APCE on PSE.ARRIVE_PRICE_CITY=APCE.CODE
		Left join T_PRICE_SECTION SECTION on PSE.fuel_fee_section=SECTION.CODE and SECTION.active='Y'
		Left join T_PRICE_EVENT_ROUTE_SUB TPER on SPCE.Code=TPER.Send_Price_City and APCE.CODE=TPER.ARRIVAL_PRICE_CITY and TPER.Active='Y'
   	    Left join T_PRICE_EVENT_DISCOUNT_SUB TPEDS on TPEDS.EVENT_CODE=TPER.Event_Code and TPEDS.ACTIVE='Y'and PSE.Active='Y'
   	    WHERE
		EXISTS (SELECT 1 FROM (
			SELECT PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY,MAX(PSE.MODIFY_TIME) AS MAX_MODIFY_TIME
			FROM T_PRICE_STANDARD PSE
			 <where>
			 <!-- 通过活动查询标准价格时，只需要查询出当前生效的标准价格，因为如果标准价格时无效的话，那么这个活动也没有意义 Chenyl @20160305 -->
			 PSE.ACTIVE = 'Y'
			 <![CDATA[ AND NVL(#{endTime, jdbcType=TIMESTAMP}, SYSDATE) >= PSE.Effective_Time 
			 	AND (PSE.Invalid_Time IS NULL OR PSE.Invalid_Time > NVL(#{endTime, jdbcType=TIMESTAMP}, SYSDATE))  ]]>
	        <if test="sendPriceCity != null and sendPriceCity != ''">
				AND PSE.SEND_PRICE_CITY = #{sendPriceCity, jdbcType=CHAR}
			</if>
			<if test="arrivalPriceCity != null and arrivalPriceCity != ''">
				AND PSE.ARRIVE_PRICE_CITY = #{arrivalPriceCity, jdbcType=CHAR}
			</if>
			<if test="transTypeCode != null and transTypeCode != ''">
				AND PSE.TRANS_TYPE_CODE = #{transTypeCode, jdbcType=CHAR}
			</if>
	      </where>
			GROUP BY PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY ) 
		WHERE TRANS_TYPE_CODE = PSE.TRANS_TYPE_CODE AND SEND_PRICE_CITY=PSE.SEND_PRICE_CITY AND ARRIVE_PRICE_CITY=PSE.ARRIVE_PRICE_CITY AND MAX_MODIFY_TIME = PSE.MODIFY_TIME)
	</select>
	<select id="queryFailureData" resultMap="priceStandardResultMap" 
		parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobFailureEntity">
		
		
		SELECT
		<include refid="query_mian_param"></include>
		,
		<include refid="query_send_pricecisty_param"></include>
		,
		<include refid="query_arrive_pricecisty_param"></include>
     FROM T_JOB_SEND_FAILURE C 
	    LEFT JOIN T_PRICE_STANDARD PSE ON C.BUSINESS_ID = PSE.ID
    Left join T_PRICE_CITY SPCE on PSE.SEND_PRICE_CITY=SPCE.CODE
    Left join T_PRICE_CITY APCE on PSE.ARRIVE_PRICE_CITY=APCE.CODE
    Left join T_PRICE_SECTION SECTION on PSE.fuel_fee_section=SECTION.CODE and SECTION.active='Y'
         WHERE
    EXISTS (SELECT 1 FROM (
    <!-- 增加MAX(PSE.CREATE_TIME)，过滤修改数据时候产生的两条MODIFY_TIME相同的数据,Chenyl @20160305 -->
      SELECT PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY,MAX(PSE.CREATE_TIME) AS MAX_CREATE_TIME,MAX(PSE.MODIFY_TIME) AS MAX_MODIFY_TIME
       FROM T_JOB_SEND_FAILURE C 
	    LEFT JOIN T_PRICE_STANDARD PSE ON C.BUSINESS_ID = PSE.ID
        <where>
				<if test="active != null and active != ''">
					AND C.ACTIVE = #{active, jdbcType=CHAR}
				</if>
			</where>
      GROUP BY PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY )
    WHERE TRANS_TYPE_CODE = PSE.TRANS_TYPE_CODE AND SEND_PRICE_CITY=PSE.SEND_PRICE_CITY AND ARRIVE_PRICE_CITY=PSE.ARRIVE_PRICE_CITY AND MAX_CREATE_TIME = PSE.CREATE_TIME AND MAX_MODIFY_TIME = PSE.MODIFY_TIME)
    <!-- 增加最大失败重发次数过滤 Chenyl @20160305 -->
    <if test="retryTimes != null and retryTimes != ''">
    	<![CDATA[AND C.RETRY_TIMES < #{retryTimes, jdbcType=INTEGER}]]>
    </if> 
	</select>
	
	<resultMap
		type="com.hoau.miser.module.biz.job.shared.domain.PriceEventSendEntity"
		id="priceEvnetSendResultMap">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="EVENT_CODE" property="eventCode" jdbcType="VARCHAR" />
		<result column="EVENT_NAME" property="eventName" jdbcType="VARCHAR" />
		<result column="effective_time" property="effectiveTime" jdbcType="TIMESTAMP" />
		<result column="invalid_time" property="invalidTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="IS_FORCE_COLSE" property="isForceColse" jdbcType="VARCHAR" />
		<result column="active" property="active" jdbcType="VARCHAR" />
		<result column="create_user_code" property="createUser" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createDate" jdbcType="TIMESTAMP" />
		<result column="MODIFY_USER_CODE" property="modifyUser" jdbcType="VARCHAR" />
		<result column="modify_time" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<!-- 门店集合 -->
		<collection property="priceEventCorpSubs" ofType="com.hoau.miser.module.biz.job.shared.domain.PriceEventCorpSubSendEntity">
			<id column="CS_ID" property="id" jdbcType="VARCHAR" />
			<result column="CS_EVENTCODE" property="eventCode" jdbcType="VARCHAR"/>
			<result column="CS_CORPTYPE" property="corpType" jdbcType="VARCHAR"/>
			<result column="CS_ORGCODE" property="orgCode" jdbcType="VARCHAR"/>
		</collection>
		<!-- 明细集合 -->
		<collection property="priceEventDiscountSubs" ofType="com.hoau.miser.module.biz.job.shared.domain.PriceEventDiscountSubSendEntity">
			<id column="DS_ID" property="id" jdbcType="VARCHAR" />
			<result column="DS_EVENTCODE" property="eventCode" jdbcType="VARCHAR"/>
			<result column="DS_TRANSTYPECODE" property="transTypeCode" jdbcType="VARCHAR"/>
			<result column="DS_FREIGHTSECTIONCODE" property="freightSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_ADDSECTIONCODE" property="addSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_FUELSECTIONCODE" property="fuelSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_PICKUPSECTIONCODE" property="pickupSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_DELIVERYSECTIONCODE" property="deliverySectionCode" jdbcType="VARCHAR"/>
			<result column="DS_UPSTAIRSECTIONCODE" property="upstairSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_INSURANCERATESECTIONCODE" property="insuranceRateSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_INSURANCESECTIONCODE" property="insuranceSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_PAPERSECTIONCODE" property="paperSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_SMSSECTIONCODE" property="smsSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_COLLECTIONRATESECTIONCODE" property="collectionRateSectionCode" jdbcType="VARCHAR"/>
			<result column="DS_COLLECTIONSECTIONCODE" property="collectionSectionCode" jdbcType="VARCHAR"/>
		</collection>
		<!-- 渠道明细集合 -->
		<collection property="priceEventOrderchannelSubs" ofType="com.hoau.miser.module.biz.job.shared.domain.PriceEventOrderchannelSubSendEntity">
			<id column="OS_ID" property="id" jdbcType="VARCHAR" />
			<result column="OS_EVENTCODE" property="eventCode" jdbcType="VARCHAR"/>
			<result column="OS_CHANNELCODE" property="channelCode" jdbcType="VARCHAR"/>
		</collection>
		<!-- 线路明细集合 -->
		<collection property="priceEventRouteSubs" ofType="com.hoau.miser.module.biz.job.shared.domain.PriceEventRouteSubSendEntity">
			<id column="RS_ID" property="id" jdbcType="VARCHAR" />
			<result column="RS_EVENTCODE" property="eventCode" jdbcType="VARCHAR"/>
			<result column="RS_SENDPRICECITY" property="sendPriceCity" jdbcType="VARCHAR"/>
			<result column="RS_ARRIVALPRICECITY" property="arrivalPriceCity" jdbcType="VARCHAR"/>
		</collection>
		<!-- 客户集合 -->
		<collection property="priceEventCustomerSubs" ofType="com.hoau.miser.module.biz.job.shared.domain.PriceEventCustomerSubSendEntity">
			<id column="CUS_ID" property="id" jdbcType="VARCHAR" />
			<result column="CUS_EVENTCODE" property="eventCode" jdbcType="VARCHAR"/>
			<result column="CUS_CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR"/>
			<result column="CUS_CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR"/>
		</collection>
	</resultMap>
	<sql id="query_mian_field">
		MAIN.ID AS ID,
		MAIN.EVENT_CODE AS EVENT_CODE,
		MAIN.EVENT_NAME AS EVENT_NAME,
		MAIN.effective_time AS effective_time,
		MAIN.invalid_time AS invalid_time,
		MAIN.remark AS remark,
		MAIN.IS_FORCE_COLSE as IS_FORCE_COLSE,
		MAIN.active AS active,
		MAIN.create_user_code AS create_user_code,
		MAIN.create_time AS create_time,
		MAIN.modify_time AS modify_time,
		MAIN.MODIFY_USER_CODE AS MODIFY_USER_CODE,
		<![CDATA[
		case when (MAIN.invalid_time<sysdate and MAIN.active='Y') then 'PASSED'
 			                     when (MAIN.effective_time<=sysdate and MAIN.active='Y') then 'EFFECTIVE'
 			                     when (MAIN.effective_time>sysdate and MAIN.active='Y') then 'WAIT'
 			                     when (MAIN.active='N') then 'DELETED'
                           else 
                                ''
        end as state
        ]]>
		
	</sql>
	<sql id="query_priceEventCorpSubs_field">
		CS.ID AS CS_ID,
		CS.EVENT_CODE AS CS_EVENTCODE,
		CS.CORP_TYPE AS CS_CORPTYPE,
		CS.ORG_CODE AS CS_ORGCODE
	</sql>
	
	<sql id="query_priceEventDiscountSubs_field">
		DS.ID AS DS_ID,
		DS.event_Code	AS DS_EVENTCODE ,
		DS.trans_Type_Code	AS DS_TRANSTYPECODE,
		DS.freight_Section_Code	AS DS_FREIGHTSECTIONCODE,
		DS.add_Section_Code	AS DS_ADDSECTIONCODE,
		DS.fuel_Section_Code	AS DS_FUELSECTIONCODE,
		DS.pickup_Section_Code	AS DS_PICKUPSECTIONCODE,
		DS.delivery_Section_Code	AS DS_DELIVERYSECTIONCODE,
		DS.upstair_Section_Code	AS DS_UPSTAIRSECTIONCODE,
		DS.insurance_Rate_Section_Code	AS DS_INSURANCERATESECTIONCODE,
		DS.insurance_Section_Code	AS DS_INSURANCESECTIONCODE,
		DS.paper_Section_Code	AS DS_PAPERSECTIONCODE,
		DS.sms_Section_Code	AS DS_SMSSECTIONCODE,
		DS.collection_Rate_Section_Code	AS DS_COLLECTIONRATESECTIONCODE,
		DS.collection_Section_Code	AS DS_COLLECTIONSECTIONCODE
	</sql>
	<sql id="query_priceEventOrderchannelSubs_field">
		OS.ID AS OS_ID,
		OS.EVENT_CODE AS OS_EVENTCODE,
		OS.CHANNEL_CODE AS OS_CHANNELCODE
	</sql>
	<sql id="query_priceEventRouteSubs_field">
		RS.ID AS RS_ID,
		RS.EVENT_CODE AS RS_EVENTCODE,
		RS.SEND_PRICE_CITY AS RS_SENDPRICECITY,
		RS.ARRIVAL_PRICE_CITY AS RS_ARRIVALPRICECITY
	</sql>
	<sql id="query_priceEventCustomerSubs_field">
		CUS.ID AS CUS_ID,
		CUS.EVENT_CODE AS CUS_EVENTCODE,
		CUS.CUSTOMER_CODE AS CUS_CUSTOMER_CODE,
		CUS.CUSTOMER_NAME AS CUS_CUSTOMER_NAME
	</sql>
	<!-- 标准价格获取需要同步的活动-->
	<select id="queryListByParamByEventStandard" resultMap="priceEvnetSendResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.PriceEventSendEntity">
		SELECT
		<include refid="query_mian_field"></include>
		,
		<include refid="query_priceEventDiscountSubs_field"></include>
		,
		<include refid="query_priceEventRouteSubs_field"></include>
		FROM T_PRICE_EVENT MAIN
		Left join T_PRICE_EVENT_ROUTE_SUB RS ON MAIN.EVENT_CODE=RS.EVENT_CODE
		Left join T_PRICE_EVENT_DISCOUNT_SUB DS ON MAIN.EVENT_CODE=DS.EVENT_CODE
   	    WHERE
   	    MAIN.ACTIVE = 'Y' 
   	    AND NOT EXISTS( SELECT  EVENT_CODE from T_PRICE_EVENT_CUSTOMER_SUB WHERE MAIN.EVENT_CODE=EVENT_CODE)
   	    AND NOT EXISTS( SELECT  EVENT_CODE from T_PRICE_EVENT_CORP_SUB PECS WHERE MAIN.EVENT_CODE=EVENT_CODE)
   	    AND NOT EXISTS( SELECT  EVENT_CODE from T_PRICE_EVENT_ORDERCHANNEL_SUB PEOS WHERE MAIN.EVENT_CODE=EVENT_CODE)
   	    AND EXISTS (SELECT 1 FROM (
			SELECT DS.TRANS_TYPE_CODE,RS.SEND_PRICE_CITY,RS.ARRIVAL_PRICE_CITY,MAX(MAIN.CREATE_TIME) AS MAX_CREATE_TIME,MAX(MAIN.MODIFY_TIME) AS MAX_MODIFY_TIME
			FROM T_PRICE_EVENT MAIN
			Left join T_PRICE_EVENT_ROUTE_SUB RS ON MAIN.EVENT_CODE=RS.EVENT_CODE
			Left join T_PRICE_EVENT_DISCOUNT_SUB DS ON MAIN.EVENT_CODE=DS.EVENT_CODE
			 <where>
   	    	<!-- 从标准价格查询的时候只需要查询当前有效的活动Chenyl@20160305 -->
			 MAIN.ACTIVE = 'Y' 
			<![CDATA[ AND NVL(#{endTime, jdbcType=TIMESTAMP}, SYSDATE) >= MAIN.Effective_Time 
			and (MAIN.Effective_Time IS NULL OR MAIN.Effective_Time > NVL(#{endTime, jdbcType=TIMESTAMP}, SYSDATE)) ]]> 
	        <if test="sendPriceCity != null and sendPriceCity != ''">
				AND RS.SEND_PRICE_CITY = #{sendPriceCity, jdbcType=CHAR}
			</if>
			<if test="arrivalPriceCity != null and arrivalPriceCity != ''">
				AND RS.ARRIVAL_PRICE_CITY = #{arrivalPriceCity, jdbcType=CHAR}
			</if>
			<if test="transTypeCode != null and transTypeCode != ''">
				AND DS.TRANS_TYPE_CODE = #{transTypeCode, jdbcType=CHAR}
			</if>
	      </where>
			GROUP BY DS.TRANS_TYPE_CODE,RS.SEND_PRICE_CITY,RS.ARRIVAL_PRICE_CITY ) 
		WHERE TRANS_TYPE_CODE = DS.TRANS_TYPE_CODE AND SEND_PRICE_CITY=RS.SEND_PRICE_CITY AND ARRIVAL_PRICE_CITY=RS.ARRIVAL_PRICE_CITY AND MAX_CREATE_TIME = MAIN.CREATE_TIME AND MAX_MODIFY_TIME = MAIN.MODIFY_TIME)
		<if test="sendPriceCity != null and sendPriceCity != ''">
			AND RS.SEND_PRICE_CITY = #{sendPriceCity, jdbcType=CHAR}
		</if>
		<if test="arrivalPriceCity != null and arrivalPriceCity != ''">
			AND RS.ARRIVAL_PRICE_CITY = #{arrivalPriceCity, jdbcType=CHAR}
		</if>
		<if test="transTypeCode != null and transTypeCode != ''">
			AND DS.TRANS_TYPE_CODE = #{transTypeCode, jdbcType=CHAR}
		</if>
	</select>
	
		<!-- 标准价格活动同步-->
	<select id="queryListByParamByEventFORStandard" resultMap="priceEvnetSendResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.PriceEventSendEntity">
		SELECT
		<include refid="query_mian_field"></include>
		,
		<include refid="query_priceEventDiscountSubs_field"></include>
		,
		<include refid="query_priceEventRouteSubs_field"></include>
		FROM T_PRICE_EVENT MAIN
		Left join T_PRICE_EVENT_ROUTE_SUB RS ON MAIN.EVENT_CODE=RS.EVENT_CODE
		Left join T_PRICE_EVENT_DISCOUNT_SUB DS ON MAIN.EVENT_CODE=DS.EVENT_CODE
   	    WHERE
		EXISTS (SELECT 1 FROM (
			SELECT DS.TRANS_TYPE_CODE,RS.SEND_PRICE_CITY,RS.ARRIVAL_PRICE_CITY,MAX(MAIN.CREATE_TIME) AS MAX_CREATE_TIME,MAX(MAIN.MODIFY_TIME) AS MAX_MODIFY_TIME
			FROM T_PRICE_EVENT MAIN
			Left join T_PRICE_EVENT_ROUTE_SUB RS ON MAIN.EVENT_CODE=RS.EVENT_CODE
			Left join T_PRICE_EVENT_DISCOUNT_SUB DS ON MAIN.EVENT_CODE=DS.EVENT_CODE
			 <where>
	       <trim  prefixOverrides="OR">
				<if test="startTime != null  and startTime != '' ">
					<![CDATA[OR (#{startTime, jdbcType=TIMESTAMP} <= MAIN.Effective_Time and MAIN.Effective_Time<= #{endTime, jdbcType=TIMESTAMP} ) ]]> 
				</if>
				<if test=" endTime != null  and endTime != ''">
					<![CDATA[OR (#{startTime, jdbcType=TIMESTAMP} <= MAIN.Invalid_Time and MAIN.Invalid_Time<= #{endTime, jdbcType=TIMESTAMP} ) ]]> 
				</if>
			</trim>
	      </where>
			GROUP BY DS.TRANS_TYPE_CODE,RS.SEND_PRICE_CITY,RS.ARRIVAL_PRICE_CITY ) 
		WHERE TRANS_TYPE_CODE = DS.TRANS_TYPE_CODE AND SEND_PRICE_CITY=RS.SEND_PRICE_CITY AND ARRIVAL_PRICE_CITY=RS.ARRIVAL_PRICE_CITY AND MAX_CREATE_TIME = MAIN.CREATE_TIME AND MAX_MODIFY_TIME = MAIN.MODIFY_TIME)
	</select>
	<sql id="failurequeryCondition_priceStandard">
		<where>
			<if test="sendTime != null">
				<!-- 失效时间落在此次同步的时间范围内 -->
				<![CDATA[
				(
					(
					PSE.INVALID_TIME < #{sendTime, jdbcType=TIMESTAMP}

				]]>
				<if test="lastSendTime != null">
					<![CDATA[
							AND PSE.INVALID_TIME >= #{lastSendTime, jdbcType=TIMESTAMP}
						]]>
				</if>
				<!-- 为了过滤待生效数据的失效，如果失效时间在当前范围内，要求当前没有生效中的数据，否则此失效数据不同步 -->
				<![CDATA[
					AND PSE.ID NOT IN (SELECT TEMP.ID FROM
							T_PRICE_STANDARD TEMP
							WHERE PSE.TRANS_TYPE_CODE=TEMP.TRANS_TYPE_CODE
							AND PSE.SEND_PRICE_CITY = TEMP.SEND_PRICE_CITY
							AND PSE.ARRIVE_PRICE_CITY = TEMP.ARRIVE_PRICE_CITY
							AND (TEMP.EFFECTIVE_TIME <= SYSDATE AND
						  (SYSDATE < TEMP.INVALID_TIME OR
						  TEMP.INVALID_TIME IS NULL))
							AND TEMP.ACTIVE = 'Y')
					)
				]]>
				<!-- end of 失效时间落在此次同步的时间范围内 -->

				<!-- 生效时间在本次同步时间范围内,生效时间在范围内要求必须状态有效的数据 -->
				<![CDATA[
					OR
					( PSE.ACTIVE='Y' AND PSE.EFFECTIVE_TIME < #{sendTime, jdbcType=TIMESTAMP}
				]]>
				<if test="lastSendTime != null">
					<![CDATA[
						AND PSE.EFFECTIVE_TIME >= #{lastSendTime, jdbcType=TIMESTAMP }
					]]>
				</if>
					)
				)
				<!-- end of生效时间在本次同步时间范围内 -->
			</if>
		</where>
	</sql>
	<!-- 客户价格失败信息的去重 -->
	<update id="failureInfoUniqByPriceStandard" parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobFailureEntity">
		update T_JOB_SEND_FAILURE A
         SET A.ACTIVE = 'N'
         where A.ACTIVE = 'Y'
               and EXISTS(
                 select 1 from (
                           select * from(
                              select 
                                     A.id,
                                   B.TRANS_TYPE_CODE,
                                    B.SEND_PRICE_CITY,
                                    B.ARRIVE_PRICE_CITY
                                    FROM T_JOB_SEND_FAILURE A
                                    join T_PRICE_STANDARD B on A.BUSINESS_ID = B.ID
                                   where A.active='Y'
                                  AND A.TYPE = #{type, jdbcType=VARCHAR}
                            ) T      
                              where 
                                 exists(
                                     select 1 from (
                                          select 
                                    PSE.id,
                                    PSE.TRANS_TYPE_CODE,
                                    PSE.SEND_PRICE_CITY,
                                    PSE.ARRIVE_PRICE_CITY
                                    from T_PRICE_STANDARD PSE
                                    WHERE
                                          (PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY, PSE.MODIFY_TIME,PSE.CREATE_TIME)
                                      IN (
                                        SELECT PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY, MAX(PSE.MODIFY_TIME) AS MAX_MODIFY_TIME,MAX(PSE.CREATE_TIME) AS MAX_CREATE_TIME
                                        FROM T_PRICE_STANDARD PSE
                                        <include refid="failurequeryCondition_priceStandard"></include>
                                      GROUP BY PSE.TRANS_TYPE_CODE,PSE.SEND_PRICE_CITY,PSE.ARRIVE_PRICE_CITY
                                      )
                                       ) temp 
                                        where  t.TRANS_TYPE_CODE=temp.TRANS_TYPE_CODE
                                           and t.ARRIVE_PRICE_CITY=temp.ARRIVE_PRICE_CITY and t.SEND_PRICE_CITY=temp.SEND_PRICE_CITY
                                 )
                   
                   ) temp where temp.id=a.id
              )
	</update>
</mapper>