<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoau.miser.module.biz.job.server.dao.CustomerLockStatusSendDao">

	<resultMap type="com.hoau.miser.module.biz.job.shared.domain.CustomerLockStatus"
		id="customerConfigResultMap">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR" />
		<result column="TRANS_TYPE_CODE" property="transType" jdbcType="VARCHAR" />
		<result column="DISCOUNT_PRIORITY_TYPE" property="lockStatus" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="VARCHAR" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 本次需要发送的数据中包含和失败信息中相同的客户，更新失败表不需要再发送 -->
	<update id="updateFailureRepeatData" parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobFailureEntity">
		UPDATE T_JOB_SEND_FAILURE A SET A.ACTIVE = 'N', REMARK = #{remark, jdbcType=VARCHAR}
		WHERE A.ACTIVE = #{active, jdbcType=VARCHAR} 
		AND A.TYPE = #{type, jdbcType=VARCHAR}
		AND EXISTS(SELECT 1 FROM T_DISCOUNT_CUSTOMER B
			WHERE B.ID = A.BUSINESS_ID AND EXISTS(SELECT 1 FROM T_DISCOUNT_CUSTOMER C
				WHERE C.CUSTOMER_CODE = B.CUSTOMER_CODE AND C.TRANS_TYPE_CODE = B.TRANS_TYPE_CODE
			<if test="lastSendTime != null and lastSendTime != ''">
				<![CDATA[AND C.MODIFY_TIME >= #{lastSendTime, jdbcType=TIMESTAMP}]]> 
			</if>
			<if test="sendTime != null and sendTime != ''">
				<![CDATA[AND C.MODIFY_TIME < #{sendTime, jdbcType=TIMESTAMP}]]> 
			</if>))
	</update>

	<!-- 失败记录关联业务表查询需要发送的数据 -->
	<select id="queryFailureData" resultMap="customerConfigResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobFailureEntity">
		SELECT A.ID AS ID,
		B.CUSTOMER_CODE AS CUSTOMER_CODE,
		B.TRANS_TYPE_CODE AS TRANS_TYPE_CODE,
		B.DISCOUNT_PRIORITY_TYPE AS DISCOUNT_PRIORITY_TYPE,
		B.ACTIVE AS ACTIVE,
		B.REMARK AS REMARK
		FROM T_JOB_SEND_FAILURE A 
		JOIN T_DISCOUNT_CUSTOMER B ON A.BUSINESS_ID = B.ID
		<where>
			(B.CUSTOMER_CODE, B.TRANS_TYPE_CODE, A.MODIFY_TIME) IN (
			SELECT B.CUSTOMER_CODE, B.TRANS_TYPE_CODE, MAX(A.MODIFY_TIME) AS MAX_MODIFY_TIME
			FROM T_JOB_SEND_FAILURE A 
			JOIN T_DISCOUNT_CUSTOMER B ON A.BUSINESS_ID = B.ID
			<where>
				<if test="type != null and type != ''">
					AND A.TYPE = #{type, jdbcType=VARCHAR}
				</if>
				<if test="active != null and active != ''">
					AND A.ACTIVE = #{active, jdbcType=VARCHAR}
				</if>
			</where> 
			GROUP BY B.CUSTOMER_CODE, B.TRANS_TYPE_CODE )
			<if test="retryTimes != null and retryTimes != ''">
				AND RETRY_TIMES <![CDATA[ < ]]> #{retryTimes, jdbcType=INTEGER}
			</if>
			<if test="type != null and type != ''">
				AND A.TYPE = #{type, jdbcType=VARCHAR}
			</if>
		</where> 
	</select>
	
	<select id="queryNeedSendData" resultMap="customerConfigResultMap"
		parameterType="com.hoau.miser.module.biz.job.shared.domain.DataSendJobQueryFilterEntity">
		SELECT A.ID AS ID,
		A.CUSTOMER_CODE AS CUSTOMER_CODE,
		A.TRANS_TYPE_CODE AS TRANS_TYPE_CODE,
		A.DISCOUNT_PRIORITY_TYPE AS DISCOUNT_PRIORITY_TYPE,
		A.ACTIVE AS ACTIVE,
		A.REMARK AS REMARK
		FROM T_DISCOUNT_CUSTOMER A
		<where>
			(A.CUSTOMER_CODE, A.TRANS_TYPE_CODE, A.CREATE_TIME, A.MODIFY_TIME) IN (
			SELECT A.CUSTOMER_CODE, A.TRANS_TYPE_CODE, MAX(A.CREATE_TIME) AS MAX_CREATE_TIME, MAX(A.MODIFY_TIME) AS MAX_MODIFY_TIME
			FROM T_DISCOUNT_CUSTOMER A
			<where>
				<if test="startTime != null and startTime != ''">
					<![CDATA[AND A.MODIFY_TIME >= #{startTime, jdbcType=TIMESTAMP}]]>
				</if>
				<if test="endTime != null and endTime != ''">
					<![CDATA[AND A.MODIFY_TIME < #{endTime, jdbcType=TIMESTAMP}]]>
				</if>
			</where>
			GROUP BY A.CUSTOMER_CODE, A.TRANS_TYPE_CODE)
		</where>
	</select>

</mapper>
